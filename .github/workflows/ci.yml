name: Build Test

on:
  push:
    branches: [ develop, feature/* ]
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: [ ubuntu-latest ]

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: java setup
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: make executable gradlew
        run: chmod +x ./gradlew

      - name: run unittest
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          JWT_ACCESS_TOKEN_EXPIRATION_HOUR: ${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION_HOUR }}
          JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}

        run: |
          ./gradlew clean test

      - name: Build Docker image
        run: docker build -t myblog-app .

      - name: Run Docker container
        run: |
          docker run -d --name myblog-app-container -p 8080:8080 \
            -e DB_URL=${{ secrets.DB_URL }} \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e MAIL_HOST=${{ secrets.MAIL_HOST }} \
            -e MAIL_PORT=${{ secrets.MAIL_PORT }} \
            -e MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} \
            -e MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} \
            -e JWT_ACCESS_TOKEN_EXPIRATION_HOUR=${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION_HOUR }} \
            -e JWT_ISSUER=${{ secrets.JWT_ISSUER }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e REDIS_HOST=${{ secrets.REDIS_HOST }} \
            -e REDIS_PORT=${{ secrets.REDIS_PORT }} \
            myblog-app

      - name: Set up Docker Compose
        run: sudo apt-get install docker-compose

      - name: Run services with Docker Compose
        run: |
          docker-compose up -d